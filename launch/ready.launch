<launch>
    <arg name="veh" default="$(env VEHICLE_NAME)" doc="Name of vehicle. ex: megaman"/>
    <arg name="config" default="baseline" doc="Specify a config."/>
    <arg name="param_file_name" default="default" doc="Specify a param file. ex:megaman." />



    <!-- keyboard_mapper -->
    <remap from="/$(arg veh)/keyboard_mapper_node/cmd_vel" to="cmd_vel"/>
    <include file="$(find mapper)/launch/keyboard_mapper_node.launch">
        <arg name="veh" value="$(arg veh)"/>
    </include>

    <!-- run inverse_kinematics_node -->
    <remap from="inverse_kinematics_node/car_cmd" to="keyboard_mapper_node/car_cmd"/>
    <remap from="inverse_kinematics_node/wheels_cmd" to="wheels_driver_node/wheels_cmd" />
    <include file="$(find ominibot_car)/launch/inverse_kinematics_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="config" value="r$(arg config)"/>
    </include>


    <!-- Wheels Driver -->
    <include file="$(find ominibot_car)/launch/wheels_ominibot_driver_node.launch">
        <arg name="veh" value="$(arg veh)"/>
    </include>
    
    <include file="$(find ydlidar)/launch/lidar.launch"/>
    <node pkg="rf2o_laser_odometry" type="rf2o_laser_odometry_node" name="rf2o_laser_odometry">
        <param name="laser_scan_topic" value="/scan"/>        # topic where the lidar scans are being published
        <param name="odom_topic" value="/odom_rf2o" />              # topic where tu publish the odometry estimations
        <param name="publish_tf" value="false" />                   # wheter or not to publish the tf::transform (base->odom)
        <param name="base_frame_id" value="/base_link"/>            # frame_id (tf) of the mobile robot base. A tf transform from the laser_fra$
        <param name="odom_frame_id" value="/odom" />                # frame_id (tf) to publish the odometry estimations
        <param name="init_pose_from_topic" value="" /> # (Odom topic) Leave empty to start at point (0,0)
        <param name="freq" value="6.0"/>                            # Execution frequency.
        <param name="verbose" value="true" />                       # verbose
      </node>

      
    <remap from="/cmd_vel" to="/rosky01/cmd_vel"/>
    <node pkg="ros_final" type="rosky_driver" name="rosky_driver_node" output="screen"/>
</launch>